/*
 * This file is generated by jOOQ.
 */
package com.musinsa.coord;


import com.musinsa.coord.tables.Brand;
import com.musinsa.coord.tables.Category;
import com.musinsa.coord.tables.FlywaySchemaHistory;
import com.musinsa.coord.tables.Product;
import com.musinsa.coord.tables.ProductVariant;
import com.musinsa.coord.tables.records.BrandRecord;
import com.musinsa.coord.tables.records.CategoryRecord;
import com.musinsa.coord.tables.records.FlywaySchemaHistoryRecord;
import com.musinsa.coord.tables.records.ProductRecord;
import com.musinsa.coord.tables.records.ProductVariantRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * PUBLIC.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BrandRecord> CONSTRAINT_3 = Internal.createUniqueKey(Brand.BRAND, DSL.name("CONSTRAINT_3"), new TableField[] { Brand.BRAND.ID }, true);
    public static final UniqueKey<BrandRecord> UQ_BRAND_NAME = Internal.createUniqueKey(Brand.BRAND, DSL.name("UQ_BRAND_NAME"), new TableField[] { Brand.BRAND.NAME }, true);
    public static final UniqueKey<CategoryRecord> CONSTRAINT_31 = Internal.createUniqueKey(Category.CATEGORY, DSL.name("CONSTRAINT_31"), new TableField[] { Category.CATEGORY.ID }, true);
    public static final UniqueKey<CategoryRecord> UQ_CATEGORY_NAME = Internal.createUniqueKey(Category.CATEGORY, DSL.name("UQ_CATEGORY_NAME"), new TableField[] { Category.CATEGORY.NAME }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<ProductRecord> CONSTRAINT_1 = Internal.createUniqueKey(Product.PRODUCT, DSL.name("CONSTRAINT_1"), new TableField[] { Product.PRODUCT.ID }, true);
    public static final UniqueKey<ProductRecord> UQ_BRAND_CATEGORY = Internal.createUniqueKey(Product.PRODUCT, DSL.name("UQ_BRAND_CATEGORY"), new TableField[] { Product.PRODUCT.BRAND_ID, Product.PRODUCT.CATEGORY_ID }, true);
    public static final UniqueKey<ProductVariantRecord> CONSTRAINT_D = Internal.createUniqueKey(ProductVariant.PRODUCT_VARIANT, DSL.name("CONSTRAINT_D"), new TableField[] { ProductVariant.PRODUCT_VARIANT.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ProductRecord, BrandRecord> FK_BRAND = Internal.createForeignKey(Product.PRODUCT, DSL.name("FK_BRAND"), new TableField[] { Product.PRODUCT.BRAND_ID }, Keys.CONSTRAINT_3, new TableField[] { Brand.BRAND.ID }, true);
    public static final ForeignKey<ProductRecord, CategoryRecord> FK_CATEGORY = Internal.createForeignKey(Product.PRODUCT, DSL.name("FK_CATEGORY"), new TableField[] { Product.PRODUCT.CATEGORY_ID }, Keys.CONSTRAINT_31, new TableField[] { Category.CATEGORY.ID }, true);
    public static final ForeignKey<ProductVariantRecord, ProductRecord> FK_PRODUCT = Internal.createForeignKey(ProductVariant.PRODUCT_VARIANT, DSL.name("FK_PRODUCT"), new TableField[] { ProductVariant.PRODUCT_VARIANT.PRODUCT_ID }, Keys.CONSTRAINT_1, new TableField[] { Product.PRODUCT.ID }, true);
}
